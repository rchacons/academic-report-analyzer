events {}

http { 
    
    client_max_body_size 10M;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                  '$status $body_bytes_sent "$http_referer" '
                  '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    upstream backend {
        server backend:8000;
    }

    upstream frontend {
        server frontend-serve:80;
    }

    # HTTPS server
    server {
        listen 443 ssl;
        server_name ${SERVER_NAME};

        ssl_certificate ${SSL_CERTIFICATE};  # certificate
        ssl_certificate_key ${SSL_CERTIFICATE_KEY};  # private key

        # Forwards api requests to the backend
        location /api/v1/ {
            proxy_pass http://backend/;

            proxy_set_header Access-Control-Allow-Origin $http_origin;
            proxy_set_header Access-Control-Allow-Methods 'GET, POST, OPTIONS';
            proxy_set_header Access-Control-Allow-Headers 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';
            proxy_set_header Access-Control-Expose-Headers 'Content-Length,Content-Range';
            proxy_pass_request_headers on;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }




        # Forwards all other requests to the frontend
        location / {
            proxy_pass http://frontend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }
    }

    # Redirects HTTP to HTTPS
    server {
        listen 80;
        server_name ${SERVER_NAME};
        return 301 https://$host$request_uri;
    }
}
